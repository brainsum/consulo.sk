@charset "UTF-8";
/**
 * @file
 * SMACSS: base
 *
 * CSS reset, HTML elements and any other very basic stuffs.
 * All basic stuff is in base subdirectory.
 *
 * ITCSS: generic, elements
 */
/**
 * Imports
 *
 * First import our custom variables and mixins
 */
/**
 * @file
 * Sass index file
 *
 * The main importer and organizer sass file.
 *
 */
/**
 * Settings
 *
 * Setting files contain **global** configurations that are shared by more than
 * one modules.
 * Settings that are connected to one and only module are a part of the module
 * itself.
 * Local configurations should be contained into the modules (objects,
 * components, etc.) that are related to.
 */
/**
 * @file
 * Settings
 *
 * Setting files contain **global** configurations that are shared by more than
 * one modules. Settings that are connected to one and only module are a part
 * of the module itself.
 * Local configurations should be contained into the modules (objects,
 * components, etc.) that are related to.
 * It’s important not to output any CSS in the first 2 layers.
 */
/**
 * @file
 * Breakpoint Settings
 *
 * - Define breakpoint variables
 */
/**
 * @file
 * Color Settings
 *
 * - Define color variables
 */
/**
 * @file
 * Breakpoint Settings
 *
 * - Define breakpoint variables
 */
/**
 * @file
 * Typography Settings
 *
 * - Import Webfonts
 * - Define Font-families
 * - Define Typography-related global variables
 */
@import url("https://fonts.googleapis.com/css?family=Playfair+Display");
@import url("https://fonts.googleapis.com/css?family=Rubik:400,500,700");
/**
 * Tools
 *
 * Globally used mixins and functions.
 * It’s important not to output any CSS in the first 2 layers.
 */
/**
 * @file
 * Tools
 *
 * Tools are sets of globally used sass mixins and functions. Mixins that are
 * connected to one and only module are a part of the module itself.
 * It’s important not to output any CSS in the first 2 layers.
 */
/**
 * @file
 *** FOUNDATION FOR SITES AND CUSTOM MIXINS
 */
/**
 * @group Foundation for Sites mixins
 * Mixins placeholder file
 * @todo These are mostly from Foundation and should be removed and used straight from Foundation.
 */
.clearfix:before, .clearfix:after {
  content: " ";
  display: table;
}

.clearfix:after {
  clear: both;
}

/**
 * Horizontally or vertically aligns the items within a flex container.
 *
 * @param {Keyword} $x [null] - Horizontal alignment to use. Can be `left`,
 * `right`, `center`, `justify`, or `spaced`. Or, set it to `null`
 * (the default) to not set horizontal alignment.
 * @param {Keyword} $y [null] - Vertical alignment to use. Can be `top`,
 * `bottom`, `middle`, or `stretch`. Or, set it to `null` (the default) to not
 * set vertical alignment.
 */
/**
 * Vertically align a single column within a flex row. Apply this mixin to a
 * flex column.
 *
 * @param {Keyword} $y [null] - Vertical alignment to use. Can be `top`,
 * `bottom`, `middle`, or `stretch`. Or, set it to `null` (the default) to not
 * set vertical alignment.
 */
/**
 * Changes the source order of a flex child. Children with lower numbers appear
 * first in the layout.
 *
 * @param {Number} $order [0] - Order number to apply.
 */
/**
 * Change flex-direction
 *
 * @param {Keyword} $direction [row] - Flex direction to use. Can be
 * - row (default): same as text direction
 * - row-reverse: opposite to text direction
 * - column: same as row but top to bottom
 * - column-reverse: same as row-reverse top to bottom
 */
/**
 * @include flex-wrap(nowrap | wrap | wrap-reverse);
 * Default: nowrap
 */
/**
 * @include flex-flow(values);
 * Default: row nowrap
 */
/**
 * @include order(int);
 * Default: 0
 */
/**
 * @include flex-grow(int);
 * Default: 1
 */
/**
 * @include flex-shrink(int);
 * Default: 0
 */
/**
 * @include flex-basis(int);
 * Default: auto
 */
/**
 * @include justify-content(flex-start | flex-end | center | space-between
 * | space-around);
 * Default: flex-start
 */
/**
 * @include align-items(flex-start | flex-end | center | baseline | stretch);
 * Default: stretch
 */
/**
 * @include align-self(auto | flex-start | flex-end | center | baseline | stretch);
 * Default: auto
 */
/**
 * @include align-content(flex-start | flex-end | center | space-between | space-around | stretch);
 * Default: stretch
 */
/**
 * @group theming mixins
 */
/**
 * Utilities
 *
 * Utilities and helper classes with ability to override anything which goes
 * before in the triangle, eg. hide helper class.
 * They are usually one line of code and have !important to make sure they
 * override all element styles when used.
 */
/**
 * Base
 *
 * Base styles are the default styles of base elements. It's a combination of
 * ITCSS's Generic and Elements layers.
 *
 * A Base rule is applied to an element using an element selector, a descendant
 * selector, or a child selector, along with any pseudo-classes. It doesn’t
 * include any class or ID selectors. Base styles are related to the basic
 * styles of an application, like Typography, Reset and styling of global
 * elements.
 *
 * This is the first layer which generates actual CSS.
 */
/**
 * @file
 * Initialize base
 *
 * Initialize is a modern, elegant and minimal combination of Normalize.css,
 * and CSS Reset.
 * Compatible with IE10+.
 */
body {
  background: olivedrab;
}

a {
  text-decoration: none;
}

/**
 * @file
 * Typography element
 *
 * Text elements.
 */
html {
  font-size: 62.5%;
  /* 1rem = 10px; 10px/16px = 62.5% */
}

body {
  color: #564b59;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  display: block;
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  font-weight: normal;
}

p {
  display: block;
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  font-family: "Rubik", sans-serif;
  line-height: 2rem;
  letter-spacing: .1rem;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS5jc3MiLCJzb3VyY2VzIjpbImJhc2Uuc2NzcyIsIl9pbmRleC5zY3NzIiwiMS5zZXR0aW5ncy9fc2V0dGluZ3MuYWxsLnNjc3MiLCIxLnNldHRpbmdzL19zZXR0aW5ncy5icmVha3BvaW50cy5zY3NzIiwiMS5zZXR0aW5ncy9fc2V0dGluZ3MuY29sb3JzLnNjc3MiLCIxLnNldHRpbmdzL19zZXR0aW5ncy5ncmlkLnNjc3MiLCIxLnNldHRpbmdzL19zZXR0aW5ncy50eXBvZ3JhcGh5LnNjc3MiLCIyLnRvb2xzL190b29scy5hbGwuc2NzcyIsIjIudG9vbHMvX3Rvb2xzLm1peGlucy5zY3NzIiwiMy5iYXNlL19iYXNlLnJlc2V0LnNjc3MiLCIzLmJhc2UvX2Jhc2UudHlwb2dyYXBoeS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7R0FRRztBQUVIOzs7O0dBSUc7QUNkSDs7Ozs7O0dBTUc7QUFFSDs7Ozs7Ozs7O0dBU0c7QUNqQkg7Ozs7Ozs7Ozs7R0FVRztBQ1ZIOzs7OztHQUtHO0FDTEg7Ozs7O0dBS0c7QUNMSDs7Ozs7R0FLRztBQ0xIOzs7Ozs7O0dBT0c7QUFJSCxPQUFPLENBQUMsK0RBQUk7QUFDWixPQUFPLENBQUMsZ0VBQUk7QUxTWjs7Ozs7R0FLRztBTTFCSDs7Ozs7OztHQU9HO0FDTEg7OztHQUdHO0FBS0g7Ozs7R0FJRztBQWdESCxBQVZFLFNBVU8sQUFWTixPQUFPLEVBVVYsU0FBUyxBQVROLE1BQU0sQ0FBQztFQUNOLE9BQU8sRUFBRSxHQUFHO0VBQ1osT0FBTyxFQUFFLEtBQUs7Q0FDZjs7QUFNSCxBQUxFLFNBS08sQUFMTixNQUFNLENBQUM7RUFDTixLQUFLLEVBQUUsSUFBSTtDQUNaOztBQWtLSDs7Ozs7Ozs7O0dBU0c7QUEyQkg7Ozs7Ozs7R0FPRztBQWdCSDs7Ozs7R0FLRztBQU1IOzs7Ozs7OztHQVFHO0FBTUg7OztHQUdHO0FBaUJIOzs7R0FHRztBQVNIOzs7R0FHRztBQVVIOzs7R0FHRztBQVVIOzs7R0FHRztBQVNIOzs7R0FHRztBQVFIOzs7O0dBSUc7QUFtQ0g7OztHQUdHO0FBeUJIOzs7R0FHRztBQW9CSDs7O0dBR0c7QUFxQkg7O0dBRUc7QVB4ZEg7Ozs7Ozs7R0FPRztBRHBCSDs7Ozs7Ozs7Ozs7OztHQWFHO0FTOUJIOzs7Ozs7O0dBT0c7QUFFSCxBQUFBLElBQUksQ0FBQztFQUNKLFVBQVUsRUFBRSxTQUFTO0NBQ3JCOztBQUVELEFBQUEsQ0FBQyxDQUFDO0VBQ0EsZUFBZSxFQUFFLElBQUk7Q0FDdEI7O0FDZkQ7Ozs7O0dBS0c7QUFFSCxBQUFBLElBQUksQ0FBQztFQUNILFNBQVMsRUFBRSxLQUFLO0VBQUUsb0NBQW9DO0NBQ3ZEOztBQUVELEFBQUEsSUFBSSxDQUFDO0VBQ0gsS0FBSyxFTkpZLE9BQU87Q01LekI7O0FBRUQsQUFBQSxFQUFFO0FBQ0YsRUFBRTtBQUNGLEVBQUU7QUFDRixFQUFFO0FBQ0YsRUFBRTtBQUNGLEVBQUUsQ0FBQztFQUNELE9BQU8sRUFBRSxLQUFLO0VBQ2Qsa0JBQWtCLEVBQUUsQ0FBQztFQUNyQixnQkFBZ0IsRUFBRSxDQUFDO0VBQ25CLG1CQUFtQixFQUFFLENBQUM7RUFDdEIsaUJBQWlCLEVBQUUsQ0FBQztFQUNwQixXQUFXLEVBQUUsTUFBTTtDQUNwQjs7QUFFRCxBQUFBLENBQUMsQ0FBQztFQUNBLE9BQU8sRUFBRSxLQUFLO0VBQ2Qsa0JBQWtCLEVBQUUsQ0FBQztFQUNyQixnQkFBZ0IsRUFBRSxDQUFDO0VBQ25CLG1CQUFtQixFQUFFLENBQUM7RUFDdEIsaUJBQWlCLEVBQUUsQ0FBQztFQUNwQixXQUFXLEVKcEJDLE9BQU8sRUFBRSxVQUFVO0VJcUIvQixXQUFXLEVBQUUsSUFBSTtFQUNqQixjQUFjLEVBQUUsS0FBSztDQUN0QiJ9 */

/*# sourceMappingURL=base.css.map */
